version: '3.7'

volumes:
  # We'll define a volume that will store the data from the mongo databases:
  mongodb-data: {}
  redis-data: {}

services:
  cenit_1:
    environment:
      - REDIS_HOST=redis
      - UNICORN_WORKERS=5
      - ENABLE_RERECAPTCHA=false
      - MAXIMUM_UNICORN_CONSUMERS=3
      - MONGODB_URI=mongodb://mongo_server/cenit
      - RABBITMQ_BIGWIG_TX_URL=amqp://cenit_rabbit:cenit_rabbit@rabbitmq/cenit_rabbit_vhost
    command: ["bundle", "exec", "unicorn", "-c", "config/unicorn.rb"]
    build: .
    ports:
      - "80:8080"
    depends_on:
      - mongo_server
      - rabbitmq
      - cenit_init
      - redis

  cenit_init:
    environment:
      - REDIS_HOST=redis
      - UNICORN_WORKERS=5
      - SKIP_MONGO_CLIENT=false
      - ENABLE_RERECAPTCHA=false
      - SKIP_DB_INITIALIZATION=false
      - MAXIMUM_UNICORN_CONSUMERS=0
      - MONGODB_URI=mongodb://mongo_server/cenit
      - RABBITMQ_BIGWIG_TX_URL=amqp://cenit_rabbit:cenit_rabbit@rabbitmq/cenit_rabbit_vhost
    command: ["bundle", "exec", "unicorn", "-c", "config/unicorn.rb"]
    build: .
    depends_on:
      - mongo_server
      - rabbitmq
      - redis

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_PASS: cenit_rabbit
      RABBITMQ_DEFAULT_USER: cenit_rabbit
      RABBITMQ_DEFAULT_VHOST: cenit_rabbit_vhost
    labels:
        NAME: "rabbitmq-server"

  mongo_server:
    image: mongo:3.6
    volumes:
      # We'll mount the 'mongodb-data' volume into the location mongodb stores it's data:
      - mongodb-data:/data/db

  redis:
    image: redis:5
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
